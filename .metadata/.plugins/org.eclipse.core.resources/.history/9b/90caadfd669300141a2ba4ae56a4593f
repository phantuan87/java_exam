package exam.dev.servlet;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.io.PrintWriter;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.HashMap;
import java.util.Locale;
import java.util.Map;
import java.util.Properties;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.json.simple.JSONObject;
import org.json.simple.parser.JSONParser;
import org.json.simple.parser.ParseException;

public class DailyMood extends HttpServlet {

	private static final long serialVersionUID = -1623573968810638828L;
	private static final String MOODS_FILE_PATH = "MOODS_FILE_PATH";
	private static final String CONFIG_PATH = "config.properties";
	private Map<String, String> moodByTime = new HashMap<String, String>();
	
	@Override
	public void init() throws ServletException {
		// TODO log here
		super.init();
		
		// Load configuration properties
				
		ClassLoader classLoader = getClass().getClassLoader();
		
		
		try {
			Properties props = new Properties();
			props.load(new FileReader(classLoader.getResource(CONFIG_PATH).getFile()));
			
			// Load all moods

			File moodFile = new File(classLoader.getResource(props.getProperty(MOODS_FILE_PATH)).getFile());
			
			JSONParser jsonParser = new JSONParser();
			JSONObject jsonObj = (JSONObject) jsonParser.parse(new FileReader(moodFile));
			for (int h = 0; h < 24; h++) {
				String mood = (String) jsonObj.get(Integer.toString(h));
				moodByTime.put(Integer.toString(h), mood);
			}
		}catch (FileNotFoundException ex) {
            ex.printStackTrace();
        } catch (IOException ex) {
            ex.printStackTrace();
        } catch (ParseException ex) {
            ex.printStackTrace();
        }
	}
	
	@Override
	protected void doGet(HttpServletRequest req, HttpServletResponse resp)
			throws ServletException, IOException {
		
		String clientTime = getClientTime(req);
		
		String mood = moodByTime.get(clientTime);
		
		PrintWriter out = resp.getWriter();
	    out.println(mood);
	}
	
	private String getClientTime(HttpServletRequest req) {
		Locale locale = req.getLocale();
		Calendar calendar = Calendar.getInstance(locale);
		SimpleDateFormat formatter = new SimpleDateFormat("HH");
		return formatter.format(calendar.getTime());
	}
}
